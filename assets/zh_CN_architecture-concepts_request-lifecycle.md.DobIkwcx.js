import{_ as a,f as o,o as t,an as c}from"./chunks/framework.CFMQV-X7.js";const _=JSON.parse('{"title":"请求周期","description":"","frontmatter":{},"headers":[],"relativePath":"zh_CN/architecture-concepts/request-lifecycle.md","filePath":"zh_CN/architecture-concepts/request-lifecycle.md","lastUpdated":1761445110000}'),r={name:"zh_CN/architecture-concepts/request-lifecycle.md"};function n(d,e,i,s,p,l){return t(),o("div",null,e[0]||(e[0]=[c('<h1 id="请求周期" tabindex="-1">请求周期 <a class="header-anchor" href="#请求周期" aria-label="Permalink to “请求周期”">​</a></h1><nav class="table-of-contents"><ul><li><a href="#简介">简介</a></li></ul></nav><h2 id="简介" tabindex="-1">简介 <a class="header-anchor" href="#简介" aria-label="Permalink to “简介”">​</a></h2><p>Goravel 应用的所有请求入口都是 <code>main.go</code> 文件。 该文件中使用 <code>bootstrap.Boot()</code> 引导框架加载。</p><p>然后在 <code>bootstrap/app.go</code> 脚本中创建 Goravel 实例 <code>app := foundation.Application{}</code>。</p><p>之后使用 <code>app.Boot()</code> 引导加载框架中注册的 <a href="./service-providers.html">服务提供者</a>，使用 <code>config.Boot()</code> 加载 config 目录下的配置文件。</p><p>最后，在 <code>main.go</code> 文件中使用 <code>facades.Route().Run(facades.Config().GetString(&quot;app.host&quot;))</code> 启动 HTTP 服务器。</p>',7)]))}const h=a(r,[["render",n]]);export{_ as __pageData,h as default};
