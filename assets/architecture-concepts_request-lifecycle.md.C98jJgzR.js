import{_ as t,f as o,o as a,an as c}from"./chunks/framework.CFMQV-X7.js";const f=JSON.parse('{"title":"Request Lifecycle","description":"","frontmatter":{},"headers":[],"relativePath":"architecture-concepts/request-lifecycle.md","filePath":"en/architecture-concepts/request-lifecycle.md","lastUpdated":1761449547000}'),i={name:"architecture-concepts/request-lifecycle.md"};function r(n,e,s,d,l,p){return a(),o("div",null,e[0]||(e[0]=[c('<h1 id="request-lifecycle" tabindex="-1">Request Lifecycle <a class="header-anchor" href="#request-lifecycle" aria-label="Permalink to “Request Lifecycle”">​</a></h1><nav class="table-of-contents"><ul><li><a href="#introduction">Introduction</a></li></ul></nav><h2 id="introduction" tabindex="-1">Introduction <a class="header-anchor" href="#introduction" aria-label="Permalink to “Introduction”">​</a></h2><p>The <code>main.go</code> file serves as the entry point for all requests in the Goravel application. It utilizes the <code>bootstrap.Boot()</code> function to initialize the framework.</p><p>Then a Goravel instance is created by <code>app := foundation.NewApplication()</code> in <code>bootstrap/app.go</code>.</p><p>After this, use <code>app.Boot()</code> to load the <a href="./service-providers.html">Service Provider</a> registered, and <code>config.Boot()</code> to load the configuration files under the config directory.</p><p>Finally, start the HTTP server by using <code>facades.Route().Run(facades.Config().GetString(&quot;app.host&quot;))</code> in <code>main.go</code>.</p>',7)]))}const h=t(i,[["render",r]]);export{f as __pageData,h as default};
