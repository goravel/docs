import{_ as a,f as i,o as e,an as h}from"./chunks/framework.CFMQV-X7.js";const g=JSON.parse('{"title":"Hashing","description":"","frontmatter":{},"headers":[],"relativePath":"security/hashing.md","filePath":"en/security/hashing.md","lastUpdated":1761724533000}'),t={name:"security/hashing.md"};function n(r,s,l,d,o,p){return e(),i("div",null,s[0]||(s[0]=[h(`<h1 id="hashing" tabindex="-1">Hashing <a class="header-anchor" href="#hashing" aria-label="Permalink to “Hashing”">​</a></h1><nav class="table-of-contents"><ul><li><a href="#introduction">Introduction</a></li><li><a href="#configuration">Configuration</a></li><li><a href="#basic-usage">Basic Usage</a><ul><li><a href="#hashing-passwords">Hashing Passwords</a></li><li><a href="#verifying-that-a-password-matches-a-hash">Verifying That A Password Matches A Hash</a></li><li><a href="#determining-if-a-password-needs-to-be-rehashed">Determining If A Password Needs To Be Rehashed</a></li></ul></li></ul></nav><h2 id="introduction" tabindex="-1">Introduction <a class="header-anchor" href="#introduction" aria-label="Permalink to “Introduction”">​</a></h2><p>The Goravel <code>facades.Hash()</code> provides secure Argon2id and Bcrypt hashing for storing user passwords. If you are using one of the Goravel application starter kits, Argon2id will be used for registration and authentication by default.</p><h2 id="configuration" tabindex="-1">Configuration <a class="header-anchor" href="#configuration" aria-label="Permalink to “Configuration”">​</a></h2><p>The default hashing driver for your application is configured in your application&#39;s <code>config/hashing.go</code> configuration file. There are currently several supported drivers: Argon2id and Bcrypt.</p><h2 id="basic-usage" tabindex="-1">Basic Usage <a class="header-anchor" href="#basic-usage" aria-label="Permalink to “Basic Usage”">​</a></h2><h3 id="hashing-passwords" tabindex="-1">Hashing Passwords <a class="header-anchor" href="#hashing-passwords" aria-label="Permalink to “Hashing Passwords”">​</a></h3><p>You may hash a password by calling the <code>Make</code> method on the <code>facades.Hash()</code>:</p><div class="language-go vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">password, err </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> facades.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Hash</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Make</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(password)</span></span></code></pre></div><h3 id="verifying-that-a-password-matches-a-hash" tabindex="-1">Verifying That A Password Matches A Hash <a class="header-anchor" href="#verifying-that-a-password-matches-a-hash" aria-label="Permalink to “Verifying That A Password Matches A Hash”">​</a></h3><p>The <code>Check</code> method provided by the Hash facade allows you to verify that a given plain-text string corresponds to a given hash:</p><div class="language-go vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> facades.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Hash</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Check</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">plain-text</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, hashedPassword) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // The passwords match...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="determining-if-a-password-needs-to-be-rehashed" tabindex="-1">Determining If A Password Needs To Be Rehashed <a class="header-anchor" href="#determining-if-a-password-needs-to-be-rehashed" aria-label="Permalink to “Determining If A Password Needs To Be Rehashed”">​</a></h3><p>The <code>NeedsRehash</code> method provided by the Hash facade allows you to determine if the work factor used by the hasher has changed since the password was hashed. Some applications choose to perform this check during the application&#39;s authentication process:</p><div class="language-go vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> facades.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Hash</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">NeedsRehash</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(hashed) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">     hashed </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> facades.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Hash</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Make</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">plain-text</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div>`,16)]))}const c=a(t,[["render",n]]);export{g as __pageData,c as default};
