import{_ as s,f as a,o as t,an as e}from"./chunks/framework.CFMQV-X7.js";const g=JSON.parse('{"title":"外觀","description":"","frontmatter":{},"headers":[],"relativePath":"zh_TW/architecture-concepts/facades.md","filePath":"zh_TW/architecture-concepts/facades.md","lastUpdated":1761449547000}'),h={name:"zh_TW/architecture-concepts/facades.md"};function d(n,i,r,l,p,k){return t(),a("div",null,i[0]||(i[0]=[e(`<h1 id="外觀" tabindex="-1">外觀 <a class="header-anchor" href="#外觀" aria-label="Permalink to “外觀”">​</a></h1><nav class="table-of-contents"><ul><li><a href="#概述">概述</a></li><li><a href="#外觀的工作原理">外觀的工作原理</a></li><li><a href="#外觀類參考">外觀類參考</a></li></ul></nav><h2 id="概述" tabindex="-1">概述 <a class="header-anchor" href="#概述" aria-label="Permalink to “概述”">​</a></h2><p><code>facades</code> 為應用的核心功能提供一個「靜態」接口，能夠提供更加靈活、更加優雅、易於測試的語法。</p><p>Goravel 所有的 <code>facades</code> 都定義在 <code>github.com/goravel/framework/facades</code> 下。 我們可以很輕鬆的使用 <code>facades</code>： 我們可以輕鬆使用 <code>facades</code>：</p><div class="language-go vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">github.com/goravel/framework/facades</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">facades.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Route</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Run</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(facades.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Config</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">GetString</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;app.host&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span></code></pre></div><h2 id="外觀的工作原理" tabindex="-1">外觀的工作原理 <a class="header-anchor" href="#外觀的工作原理" aria-label="Permalink to “外觀的工作原理”">​</a></h2><p><code>facades</code> 一般會在各模組 <code>ServerProvider</code> 的 <code>Register</code> 或 <code>Boot</code> 階段進行實例化。</p><div class="language-go vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">func</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">config </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ServiceProvider</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Register</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  app </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Application</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  facades.Config </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> app.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Init</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>如果該 <code>facades</code> 使用了其他 <code>facades</code>，那麼就在 <code>ServerProvider</code> 的 <code>Boot</code> 階段進行實例化：</p><div class="language-go vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">func</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">database </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ServiceProvider</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Boot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  app </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Application</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  facades.DB </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> app.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Init</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="外觀類參考" tabindex="-1">外觀類參考 <a class="header-anchor" href="#外觀類參考" aria-label="Permalink to “外觀類參考”">​</a></h2><table tabindex="0"><thead><tr><th>外觀</th><th>使用文檔</th></tr></thead><tbody><tr><td>應用程序</td><td><a href="./../architecture-concepts/service-container.html">容器</a></td></tr><tr><td>藝術家</td><td><a href="./../digging-deeper/artisan-console.html">命令行工具</a></td></tr><tr><td>身份驗證</td><td><a href="./../security/authentication.html">用戶認證</a></td></tr><tr><td>快取</td><td><a href="./../digging-deeper/cache.html">快取系統</a></td></tr><tr><td>配置</td><td><a href="./../getting-started/configuration.html">配置信息</a></td></tr><tr><td>加密</td><td><a href="./../security/encryption.html">加密解密</a></td></tr><tr><td>事件</td><td><a href="./../digging-deeper/event.html">事件系統</a></td></tr><tr><td>門</td><td><a href="./../security/authorization.html">用戶授權</a></td></tr><tr><td>Grpc</td><td><a href="./../the-basics/grpc.html">Grpc</a></td></tr><tr><td>雜湊</td><td><a href="./../security/hashing.html">哈希</a></td></tr><tr><td>日誌</td><td><a href="./../the-basics/logging.html">日誌</a></td></tr><tr><td>郵件</td><td><a href="./../digging-deeper/mail.html">郵件</a></td></tr><tr><td>Orm</td><td><a href="./../orm/getting-started.html">ORM</a></td></tr><tr><td>隊列</td><td><a href="./../digging-deeper/queues.html">隊列</a></td></tr><tr><td>速率限制器</td><td><a href="./../the-basics/routing.html">速率限制器</a></td></tr><tr><td>Route</td><td><a href="./../the-basics/routing.html">路由</a></td></tr><tr><td>Seeder</td><td><a href="./../database/seeding.html">數據填充</a></td></tr><tr><td>排程</td><td><a href="./../digging-deeper/task-scheduling.html">任務調度</a></td></tr><tr><td>儲存</td><td><a href="./../digging-deeper/task-scheduling.html">文件系統</a></td></tr><tr><td>集成測試</td><td><a href="./../testing/getting-started.html">測試</a></td></tr><tr><td>驗證</td><td><a href="./../the-basics/validation.html">表單驗證</a></td></tr></tbody></table>`,13)]))}const o=s(h,[["render",d]]);export{g as __pageData,o as default};
