import{_ as i,f as a,o as t,an as n}from"./chunks/framework.CFMQV-X7.js";const g=JSON.parse('{"title":"Encryption","description":"","frontmatter":{},"headers":[],"relativePath":"security/encryption.md","filePath":"en/security/encryption.md","lastUpdated":1761724533000}'),s={name:"security/encryption.md"};function r(o,e,c,l,h,p){return t(),a("div",null,e[0]||(e[0]=[n('<h1 id="encryption" tabindex="-1">Encryption <a class="header-anchor" href="#encryption" aria-label="Permalink to “Encryption”">​</a></h1><nav class="table-of-contents"><ul><li><a href="#introduction">Introduction</a></li><li><a href="#configuration">Configuration</a></li><li><a href="#using-the-encrypter">Using The Encrypter</a><ul><li><a href="#encrypting-a-value">Encrypting A Value</a></li><li><a href="#decrypting-a-value">Decrypting A Value</a></li></ul></li></ul></nav><h2 id="introduction" tabindex="-1">Introduction <a class="header-anchor" href="#introduction" aria-label="Permalink to “Introduction”">​</a></h2><p>Goravel&#39;s encryption services provide a simple, convenient interface for encrypting and decrypting text via OpenSSL using AES-256 encryption. All of Goravel&#39;s encrypted values are signed using a message authentication code (GMAC) so that their underlying value can not be modified or tampered with once encrypted.</p><h2 id="configuration" tabindex="-1">Configuration <a class="header-anchor" href="#configuration" aria-label="Permalink to “Configuration”">​</a></h2><p>Before using Goravel&#39;s encrypter, you must set the <code>key</code> configuration option in your <code>config/app.go</code> configuration file. This option is driven by the <code>APP_KEY</code> environment variable. Use the <code>go run . artisan key:generate</code> command to generate this variable&#39;s value since the <code>key:generate</code> command will utilize Golang&#39;s secure random bytes generator to create a secure cryptographic key for your application.</p><h2 id="using-the-encrypter" tabindex="-1">Using The Encrypter <a class="header-anchor" href="#using-the-encrypter" aria-label="Permalink to “Using The Encrypter”">​</a></h2><h3 id="encrypting-a-value" tabindex="-1">Encrypting A Value <a class="header-anchor" href="#encrypting-a-value" aria-label="Permalink to “Encrypting A Value”">​</a></h3><p>To encrypt a value, you can use the <code>EncryptString</code> method in <code>facades.Crypt()</code>. This method encrypts values using the OpenSSL and AES-256-GCM cipher. Additionally, all encrypted values are signed with a message authentication code (GMAC) to prevent decryption by malicious users who try to tamper with the data.</p><div class="language-go vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">secret, err </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> facades.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Crypt</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">EncryptString</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;goravel&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h3 id="decrypting-a-value" tabindex="-1">Decrypting A Value <a class="header-anchor" href="#decrypting-a-value" aria-label="Permalink to “Decrypting A Value”">​</a></h3><p>You can use the <code>DecryptString</code> method from <code>facades.Crypt()</code> to decrypt values. If the value can not be properly decrypted, such as when the message authentication code is invalid, an error will be returned.</p><div class="language-go vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">str, err </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> facades.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Crypt</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">DecryptString</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(secret)</span></span></code></pre></div>',13)]))}const y=i(s,[["render",r]]);export{g as __pageData,y as default};
