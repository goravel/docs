import{_ as i,f as e,o as s,an as t}from"./chunks/framework.CFMQV-X7.js";const k=JSON.parse('{"title":"加密解密","description":"","frontmatter":{},"headers":[],"relativePath":"zh_CN/security/encryption.md","filePath":"zh_CN/security/encryption.md","lastUpdated":1761724533000}'),h={name:"zh_CN/security/encryption.md"};function r(l,a,n,d,p,o){return s(),e("div",null,a[0]||(a[0]=[t('<h1 id="加密解密" tabindex="-1">加密解密 <a class="header-anchor" href="#加密解密" aria-label="Permalink to “加密解密”">​</a></h1><nav class="table-of-contents"><ul><li><a href="#简介">简介</a></li><li><a href="#配置">配置</a></li><li><a href="#基本用法">基本用法</a><ul><li><a href="#加密一个值">加密一个值</a></li><li><a href="#解密一个值">解密一个值</a></li></ul></li></ul></nav><h2 id="简介" tabindex="-1">简介 <a class="header-anchor" href="#简介" aria-label="Permalink to “简介”">​</a></h2><p>Goravel 的加密机制使用的是 OpenSSL 所提供的 AES-256 加密。 所有 Goravel 加密之后的结果都会使用消息认证码 (GMAC) 签名，使其底层值不能在加密后再次修改。</p><h2 id="配置" tabindex="-1">配置 <a class="header-anchor" href="#配置" aria-label="Permalink to “配置”">​</a></h2><p>在使用 Goravel 的加密工具之前，你必须先设置 <code>config/app.go</code> 配置文件中的 <code>key</code> 配置项。 该配置项由环境变量 <code>APP_KEY</code> 设定。 你应当使用 <code>go run . artisan key:generate</code> 命令来生成该变量的值，<code>key:generate</code> 命令将使用 Golang 的安全随机字节生成器为你的应用程序构建加密安全密钥。</p><h2 id="基本用法" tabindex="-1">基本用法 <a class="header-anchor" href="#基本用法" aria-label="Permalink to “基本用法”">​</a></h2><h3 id="加密一个值" tabindex="-1">加密一个值 <a class="header-anchor" href="#加密一个值" aria-label="Permalink to “加密一个值”">​</a></h3><p>你可以使用 <code>facades.Crypt()</code> 提供的 <code>EncryptString</code> 来加密一个值。 所有加密的值都使用 OpenSSL 的 <code>AES-256-GCM</code> 来进行加密。 此外，所有加密过的值都会使用消息认证码 (GMAC) 来签名，以检测加密字符串是否被篡改过。</p><div class="language-go vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">secret, err </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> facades.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Crypt</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">EncryptString</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;goravel&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h3 id="解密一个值" tabindex="-1">解密一个值 <a class="header-anchor" href="#解密一个值" aria-label="Permalink to “解密一个值”">​</a></h3><p>你可以使用 <code>facades.Crypt()</code> 提供的 <code>DecryptString</code> 来进行解密。 如果该值不能被正确解密，例如消息认证码 (MAC) 无效，会返回错误。</p><div class="language-go vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">str, err </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> facades.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Crypt</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">DecryptString</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(secret)</span></span></code></pre></div>',13)]))}const g=i(h,[["render",r]]);export{k as __pageData,g as default};
