import{_ as a,f as i,o as e,an as h}from"./chunks/framework.CFMQV-X7.js";const c=JSON.parse('{"title":"哈希","description":"","frontmatter":{},"headers":[],"relativePath":"zh_CN/security/hashing.md","filePath":"zh_CN/security/hashing.md","lastUpdated":1761724533000}'),t={name:"zh_CN/security/hashing.md"};function l(n,s,k,p,d,r){return e(),i("div",null,s[0]||(s[0]=[h(`<h1 id="哈希" tabindex="-1">哈希 <a class="header-anchor" href="#哈希" aria-label="Permalink to “哈希”">​</a></h1><nav class="table-of-contents"><ul><li><a href="#简介">简介</a></li><li><a href="#配置">配置</a></li><li><a href="#基本用法">基本用法</a><ul><li><a href="#哈希密码">哈希密码</a></li><li><a href="#验证密码是否与哈希匹配">验证密码是否与哈希匹配</a></li><li><a href="#检查密码是否需要重新散列-哈希">检查密码是否需要重新散列 / 哈希</a></li></ul></li></ul></nav><h2 id="简介" tabindex="-1">简介 <a class="header-anchor" href="#简介" aria-label="Permalink to “简介”">​</a></h2><p>Goravel <code>facades.Hash()</code> 为存储用户密码提供了安全的 Argon2id 和 Bcrypt 哈希加密方式。 如果你正在使用 Goravel 应用初始脚手架 ，默认情况下，将使用 Argon2id 进行注册和身份验证。</p><h2 id="配置" tabindex="-1">配置 <a class="header-anchor" href="#配置" aria-label="Permalink to “配置”">​</a></h2><p>你可以在 <code>config/hashing.go</code> 配置文件中配置默认哈希驱动程序。 目前支持两种驱动程序： Bcrypt 和 Argon2id。</p><h2 id="基本用法" tabindex="-1">基本用法 <a class="header-anchor" href="#基本用法" aria-label="Permalink to “基本用法”">​</a></h2><h3 id="哈希密码" tabindex="-1">哈希密码 <a class="header-anchor" href="#哈希密码" aria-label="Permalink to “哈希密码”">​</a></h3><p>你可以通过调用 <code>facades.Hash()</code> 的 <code>Make</code> 方法来加密你的密码：</p><div class="language-go vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">password, err </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> facades.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Hash</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Make</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(password)</span></span></code></pre></div><h3 id="验证密码是否与哈希匹配" tabindex="-1">验证密码是否与哈希匹配 <a class="header-anchor" href="#验证密码是否与哈希匹配" aria-label="Permalink to “验证密码是否与哈希匹配”">​</a></h3><p><code>Check</code> 方法能为你验证一段给定的未加密字符串与给定的散列 / 哈希值是否一致：</p><div class="language-go vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> facades.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Hash</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Check</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;plain-text&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, hashedPassword) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 密码匹配...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="检查密码是否需要重新散列-哈希" tabindex="-1">检查密码是否需要重新散列 / 哈希 <a class="header-anchor" href="#检查密码是否需要重新散列-哈希" aria-label="Permalink to “检查密码是否需要重新散列 / 哈希”">​</a></h3><p><code>NeedsRehash</code> 方法可以为你检查当散列 / 哈希的加密系数改变时，你的密码是否被新的加密系数重新加密过。 某些应用程序选择在身份验证时执行这一项检查：</p><div class="language-go vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> facades.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Hash</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">NeedsRehash</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(hashed) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">     hashed </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> facades.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Hash</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Make</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;plain-text&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div>`,16)]))}const g=a(t,[["render",l]]);export{c as __pageData,g as default};
