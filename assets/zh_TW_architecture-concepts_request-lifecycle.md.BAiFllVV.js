import{_ as a,f as o,o as t,an as c}from"./chunks/framework.CFMQV-X7.js";const _=JSON.parse('{"title":"請求週期","description":"","frontmatter":{},"headers":[],"relativePath":"zh_TW/architecture-concepts/request-lifecycle.md","filePath":"zh_TW/architecture-concepts/request-lifecycle.md","lastUpdated":1761449547000}'),r={name:"zh_TW/architecture-concepts/request-lifecycle.md"};function n(d,e,i,s,p,l){return t(),o("div",null,e[0]||(e[0]=[c('<h1 id="請求週期" tabindex="-1">請求週期 <a class="header-anchor" href="#請求週期" aria-label="Permalink to “請求週期”">​</a></h1><nav class="table-of-contents"><ul><li><a href="#概述">概述</a></li></ul></nav><h2 id="概述" tabindex="-1">概述 <a class="header-anchor" href="#概述" aria-label="Permalink to “概述”">​</a></h2><p>Goravel 應用的所有請求入口都是 <code>main.go</code> 文件。 它利用 <code>bootstrap.Boot()</code> 函數來初始化框架。</p><p>然後在 <code>bootstrap/app.go</code> 中通過 <code>app := foundation.NewApplication()</code> 創建 Goravel 實例。</p><p>之後使用 <code>app.Boot()</code> 引導加載註冊的 <a href="./service-providers.html">服務提供者</a>，並使用 <code>config.Boot()</code> 加載 config 目錄下的配置文件。</p><p>最後，在 <code>main.go</code> 文件中使用 <code>facades.Route().Run(facades.Config().GetString(&quot;app.host&quot;))</code> 啟動 HTTP 伺服器。</p>',7)]))}const h=a(r,[["render",n]]);export{_ as __pageData,h as default};
