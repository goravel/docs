import{_ as i,f as a,o as n,an as l}from"./chunks/framework.CFMQV-X7.js";const o=JSON.parse('{"title":"編譯","description":"","frontmatter":{},"headers":[],"relativePath":"zh_TW/getting-started/compile.md","filePath":"zh_TW/getting-started/compile.md","lastUpdated":1761724533000}'),e={name:"zh_TW/getting-started/compile.md"};function h(p,s,t,k,d,r){return n(),a("div",null,s[0]||(s[0]=[l(`<h1 id="編譯" tabindex="-1">編譯 <a class="header-anchor" href="#編譯" aria-label="Permalink to “編譯”">​</a></h1><nav class="table-of-contents"><ul><li><a href="#編譯命令">編譯命令</a></li><li><a href="#手動編譯">手動編譯</a><ul><li><a href="#常規編譯">常規編譯</a></li><li><a href="#靜態編譯">靜態編譯</a></li><li><a href="#交叉編譯">交叉編譯</a></li></ul></li><li><a href="#docker">Docker</a><ul><li><a href="#docker-compose">Docker Compose</a></li></ul></li><li><a href="#設置時區">設置時區</a></li><li><a href="#減小打包體積">減小打包體積</a></li></ul></nav><h2 id="編譯命令" tabindex="-1">編譯命令 <a class="header-anchor" href="#編譯命令" aria-label="Permalink to “編譯命令”">​</a></h2><p>Goravel 專案可以透過以下命令編譯：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0"><code><span class="line"><span>// 選擇要編譯的系統</span></span>
<span class="line"><span>go run . artisan build</span></span>
<span class="line"><span></span></span>
<span class="line"><span>// 指定要編譯的系統</span></span>
<span class="line"><span>go run . artisan build --os=linux</span></span>
<span class="line"><span>go run . artisan build -o=linux</span></span>
<span class="line"><span></span></span>
<span class="line"><span>// 靜態編譯</span></span>
<span class="line"><span>go run . artisan build --static</span></span>
<span class="line"><span>go run . artisan build -s</span></span>
<span class="line"><span></span></span>
<span class="line"><span>// 指定輸出檔案名稱</span></span>
<span class="line"><span>go run . artisan build --name=goravel</span></span>
<span class="line"><span>go run . artisan build -n=goravel</span></span></code></pre></div><h2 id="手動編譯" tabindex="-1">手動編譯 <a class="header-anchor" href="#手動編譯" aria-label="Permalink to “手動編譯”">​</a></h2><h3 id="常規編譯" tabindex="-1">常規編譯 <a class="header-anchor" href="#常規編譯" aria-label="Permalink to “常規編譯”">​</a></h3><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">go</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .</span></span></code></pre></div><h4 id="部署伺服器" tabindex="-1">部署伺服器 <a class="header-anchor" href="#部署伺服器" aria-label="Permalink to “部署伺服器”">​</a></h4><p>部署時需要將下列檔案與資料夾上傳至伺服器：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0"><code><span class="line"><span>./main // 編譯生成的二進位檔</span></span>
<span class="line"><span>.env</span></span>
<span class="line"><span>./public</span></span>
<span class="line"><span>./storage</span></span>
<span class="line"><span>./resources</span></span></code></pre></div><h3 id="靜態編譯" tabindex="-1">靜態編譯 <a class="header-anchor" href="#靜態編譯" aria-label="Permalink to “靜態編譯”">​</a></h3><p>常規編譯後的包還需要依賴部署環境的支持，靜態編譯出的檔案可以自由放到指定平台下運行，不需要環境配置。</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">go</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --ldflags</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;-extldflags -static&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -o</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> main</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .</span></span></code></pre></div><h3 id="交叉編譯" tabindex="-1">交叉編譯 <a class="header-anchor" href="#交叉編譯" aria-label="Permalink to “交叉編譯”">​</a></h3><p>編譯有平台區分，需要根據部署情況，選擇匹配的編譯方式。</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">//</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 編譯</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Linux</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 環境</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">CGO_ENABLED</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> GOOS</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">linux</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> GOARCH</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">amd64</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> go</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">//</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 編譯</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Windows</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 環境</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">CGO_ENABLED</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> GOOS</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">windows</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> GOARCH</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">amd64</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> go</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">//</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 編譯</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Mac</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 環境</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">CGO_ENABLED</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> GOOS</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">darwin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> GOARCH</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">amd64</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> go</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .</span></span></code></pre></div><h2 id="docker" tabindex="-1">Docker <a class="header-anchor" href="#docker" aria-label="Permalink to “Docker”">​</a></h2><p>Goravel 預設自帶 <code>Dockerfile</code> 與 <code>docker-compose.yml</code> 檔案，可以直接使用，注意此時 <code>APP_HOST</code> 應為 <code>0.0.0.0</code>。</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .</span></span></code></pre></div><p>如果你遇到下載依賴較慢與時區問題，你可以像下面的腳本一樣優化 Dockerfile 內容：</p><div class="language-dockerfile vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">dockerfile</span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 中國特別</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">FROM</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> golang:alpine </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">AS</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> builder</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">ENV</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> GO111MODULE=on \\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    CGO_ENABLED=0  \\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    GOARCH=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;amd64&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> \\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    GOOS=linux   \\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    GOPROXY=https://goproxy.cn,direct</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">WORKDIR</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /build</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">COPY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> . .</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">RUN</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> go mod tidy</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">RUN</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> go build --ldflags </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;-extldflags -static&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> -o main .</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">FROM</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> alpine:latest</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">RUN</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> sed -i </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;s/dl-cdn.alpinelinux.org/mirrors.tuna.tsinghua.edu.cn/g&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /etc/apk/repositories</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">RUN</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> apk add tzdata &amp;&amp; cp /usr/share/zoneinfo/Asia/Shanghai /etc/localtime \\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &amp;&amp; echo </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Asia/Shanghai&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &gt; /etc/timezone</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">WORKDIR</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /www</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">COPY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> --from=builder /build/main /www/</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">COPY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> --from=builder /build/database/ /www/database/</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">COPY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> --from=builder /build/public/ /www/public/</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">COPY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> --from=builder /build/storage/ /www/storage/</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">COPY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> --from=builder /build/resources/ /www/resources/</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">COPY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> --from=builder /build/.env /www/.env</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">ENTRYPOINT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/www/main&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span></code></pre></div><h3 id="docker-compose" tabindex="-1">Docker Compose <a class="header-anchor" href="#docker-compose" aria-label="Permalink to “Docker Compose”">​</a></h3><p>你也可以使用以下命令快速啟動服務：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker-compose</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker-compose</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> up</span></span></code></pre></div><blockquote><p>注意：如需外部訪問，需要將 APP_HOST 改為 0.0.0.0</p></blockquote><h2 id="設置時區" tabindex="-1">設置時區 <a class="header-anchor" href="#設置時區" aria-label="Permalink to “設置時區”">​</a></h2><p>當 <code>app.timezone</code> 配置中非 <code>UTC</code> 時區時，在編譯時需要將時區設置到應用中。 你可以選擇以下三種方式中的任何一種：</p><ol><li>在 Dockerfile 中添加時區設置</li></ol><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0"><code><span class="line"><span>RUN apk add tzdata &amp;&amp; cp /usr/share/zoneinfo/Asia/Shanghai /etc/localtime &amp;&amp; echo &quot;Asia/Shanghai&quot; &gt; /etc/timezone</span></span></code></pre></div><ol start="2"><li>在編譯時設置時區</li></ol><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0"><code><span class="line"><span>go build -tags timetzdata .</span></span></code></pre></div><ol start="3"><li>在 <code>main.go</code> 中導入時區</li></ol><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    _</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;time/tzdata&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h2 id="減小打包體積" tabindex="-1">減小打包體積 <a class="header-anchor" href="#減小打包體積" aria-label="Permalink to “減小打包體積”">​</a></h2><p>將 <code>config/app.go::providers</code> 中未用到的 <code>ServiceProvider</code> 注釋掉將能有效地減少打包體積。</p>`,36)]))}const c=i(e,[["render",h]]);export{o as __pageData,c as default};
