import{_ as i,f as a,o as e,an as n}from"./chunks/framework.CFMQV-X7.js";const g=JSON.parse('{"title":"从 v1.15 升级到 v1.16","description":"","frontmatter":{},"headers":[],"relativePath":"zh_CN/upgrade/v1.16.md","filePath":"zh_CN/upgrade/v1.16.md","lastUpdated":1761445110000}'),t={name:"zh_CN/upgrade/v1.16.md"};function l(h,s,p,k,r,d){return e(),a("div",null,s[0]||(s[0]=[n(`<h1 id="从-v1-15-升级到-v1-16" tabindex="-1">从 v1.15 升级到 v1.16 <a class="header-anchor" href="#从-v1-15-升级到-v1-16" aria-label="Permalink to “从 v1.15 升级到 v1.16”">​</a></h1><h2 id="令人兴奋的新功能-🎉" tabindex="-1">令人兴奋的新功能 🎉 <a class="header-anchor" href="#令人兴奋的新功能-🎉" aria-label="Permalink to “令人兴奋的新功能 🎉”">​</a></h2><ul><li><a href="#新增-facades-db">新增 facades.DB()</a></li><li><a href="#新增-facades-http">新增 facades.Http()</a></li><li><a href="#重构-facades-queue">重构 facades.Queue()</a></li><li><a href="#facades-auth-支持自定义驱动">facades.Auth() 支持自定义驱动</a></li><li><a href="#make-命令生成的文件支持自动注册">make:* 命令生成的文件支持自动注册</a></li><li><a href="#goravel-installer-支持选择驱动">Goravel Installer 支持选择驱动</a></li></ul><h2 id="功能增强-🚀" tabindex="-1">功能增强 🚀 <a class="header-anchor" href="#功能增强-🚀" aria-label="Permalink to “功能增强 🚀”">​</a></h2><ul><li><a href="#拆分数据库驱动">拆分数据库驱动</a></li><li><a href="#orm-新增特性">Orm 新增特性</a></li><li><a href="#支持根据数据表创建-model">支持根据数据表创建 Model</a></li><li><a href="#支持运行时动态获取-sql-语句">支持运行时动态获取 SQL 语句</a></li><li><a href="#migration-新增特性">Migration 新增特性</a></li><li><a href="#grpc-新增-shutdown-方法">Grpc 新增 Shutdown 方法</a></li><li><a href="#artisan-新增禁用打印颜色选项">Artisan 新增禁用打印颜色选项</a></li><li><a href="#加解密-env-文件">加解密 env 文件</a></li><li><a href="#发送邮件支持设置-header">发送邮件支持设置 Header</a></li><li><a href="#installer-支持自升级">Installer 支持自升级</a></li><li><a href="#多语言文件支持-embed-加载">多语言文件支持 embed 加载</a></li><li><a href="#schedule-新增特性">Schedule 新增特性</a></li><li><a href="#request-新增特性">Request 新增特性</a></li><li><a href="#route-新增特性">Route 新增特性</a></li><li><a href="#testing-支持创建-cache-镜像">Testing 支持创建 Cache 镜像</a></li><li><a href="#不同-jwt-guard-支持设置不同的-ttl-与-secert">不同 JWT Guard 支持设置不同的 secert 与 ttl</a></li><li><a href="#注册-serviceprovider-不再依赖顺序">注册 ServiceProvider 不再依赖顺序</a></li></ul><h2 id="破坏性变化-🛠" tabindex="-1">破坏性变化 🛠 <a class="header-anchor" href="#破坏性变化-🛠" aria-label="Permalink to “破坏性变化 🛠”">​</a></h2><ul><li><a href="#移除-sql-迁移">移除 SQL 迁移</a></li><li><a href="#优化-config-模块方法默认值类型">优化 Config 模块方法默认值类型</a></li><li><a href="#优化-orm-方法">优化 Orm 方法</a></li><li><a href="#优化-path-方法">优化 Path 方法</a></li><li><a href="#优化-request-方法">优化 Request 方法</a></li><li><a href="#优化-console-confirm-方法">优化 console Confirm 方法</a></li><li><a href="#优化-session-自定义驱动方式">优化 Session 自定义驱动方式</a></li><li><a href="#优化-testing-request-方法">优化 Testing.Request 方法</a></li><li><a href="#优化-carbon-方法">优化 Carbon 方法</a></li><li><a href="#优化-str-snake-方法">优化 str.Snake 方法</a></li><li><a href="#goravelcloudinary-停止维护">goravel/cloudinary 停止维护</a></li></ul><h2 id="v1-16-1" tabindex="-1">v1.16.1 <a class="header-anchor" href="#v1-16-1" aria-label="Permalink to “v1.16.1”">​</a></h2><ul><li><a href="#修复发送邮件时-bcc-和-cc-设置无效的问题">修复发送邮件时 bcc 和 cc 设置无效的问题</a></li><li><a href="#修复使用队列发送邮件时返回的-error-错误的问题">修复使用队列发送邮件时返回的 error 错误的问题</a></li><li><a href="#修复使用-orm-create-方法创建多条记录时会触发-create-事件的问题">修复使用 Orm Create 方法创建多条记录时会触发 create 事件的问题</a></li><li><a href="#修复-make-package-命令创建的代码错误的问题">修复 make:package 命令创建的代码错误的问题</a></li><li><a href="#修复发布包文件时路径错误的问题">修复发布包文件时路径错误的问题</a></li></ul><h2 id="v1-16-3" tabindex="-1">v1.16.3 <a class="header-anchor" href="#v1-16-3" aria-label="Permalink to “v1.16.3”">​</a></h2><ul><li><a href="#修复事务中-panic-不会回滚的问题">修复事务中 panic 不会回滚的问题</a></li><li><a href="#修复在独立的迁移脚本中添加或删除列时应用报错的问题">修复在独立的迁移脚本中添加或删除列时应用报错的问题</a></li><li><a href="#修复-orm-select-方法的破坏性升级">修复 Orm Select 方法的破坏性升级</a></li></ul><h2 id="升级指南" tabindex="-1">升级指南 <a class="header-anchor" href="#升级指南" aria-label="Permalink to “升级指南”">​</a></h2><p>随着 <a href="https://endoflife.date/go" target="_blank" rel="noreferrer">Golang v1.22 不再被维护</a>，Goravel v1.16 默认支持 Golang 版本由 1.22 升级为 1.23。</p><p>goravel/example 项目由 v1.15 升级到 v1.16 PR 可以作为升级参考：<a href="https://github.com/goravel/example/pull/68" target="_blank" rel="noreferrer">goravel/example#68</a></p><h3 id="_1-更新依赖" tabindex="-1">1. 更新依赖 <a class="header-anchor" href="#_1-更新依赖" aria-label="Permalink to “1. 更新依赖”">​</a></h3><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">go</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> get</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> github.com/goravel/framework@latest</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">//</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 如果使用</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> gin</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">go</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> get</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> github.com/goravel/gin@latest</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">//</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 如果使用</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> fiber</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">go</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> get</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> github.com/goravel/fiber@latest</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">//</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 如果使用</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> redis</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">go</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> get</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> github.com/goravel/redis@latest</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">//</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 如果使用</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> S3</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">go</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> get</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> github.com/goravel/s3@latest</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">//</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 如果使用</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Oss</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">go</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> get</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> github.com/goravel/oss@latest</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">//</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 如果使用</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Cos</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">go</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> get</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> github.com/goravel/cos@latest</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">//</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 如果使用</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Minio</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">go</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> get</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> github.com/goravel/minio@latest</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">go</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mod</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> tidy</span></span></code></pre></div><h3 id="_2-修改数据库配置" tabindex="-1">2. 修改数据库配置 <a class="header-anchor" href="#_2-修改数据库配置" aria-label="Permalink to “2. 修改数据库配置”">​</a></h3><p>删除数据库配置文件 <code>config/database.go</code> 中自己用不到的 <code>connections</code>，安装自己需要的数据库驱动。</p><p>以 Postgres 为例：</p><ol><li>安装驱动包</li></ol><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">go</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> get</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> github.com/goravel/postgres</span></span></code></pre></div><ol start="2"><li>添加 <code>postgres.ServiceProvider</code> 到 <code>config/app.go</code> 文件</li></ol><div class="language-go vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// config/app.go</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">github.com/goravel/postgres</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;providers&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: []</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">foundation</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ServiceProvider</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  ...</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  &amp;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">postgres</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ServiceProvider</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{},</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">},</span></span></code></pre></div><ol start="3"><li>修改 <code>config/database.go</code> 文件中的配置</li></ol><div class="language-diff vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">diff</span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">// config/database.go</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">import (</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	&quot;github.com/goravel/framework/contracts/database/driver&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	postgresfacades &quot;github.com/goravel/postgres/facades&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&quot;connections&quot;: map[string]any{</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &quot;postgres&quot;: map[string]any{</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ...</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">++    &quot;via&quot;: func() (driver.Driver, error) {</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">++      return postgresfacades.Postgres(&quot;postgres&quot;)</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">++    },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">},</span></span></code></pre></div><h3 id="_3-修改-auth-go-配置文件" tabindex="-1">3. 修改 auth.go 配置文件 <a class="header-anchor" href="#_3-修改-auth-go-配置文件" aria-label="Permalink to “3. 修改 auth.go 配置文件”">​</a></h3><div class="language-diff vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">diff</span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">// config/auth.go</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">// Supported: &quot;jwt&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&quot;guards&quot;: map[string]any{</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &quot;user&quot;: map[string]any{</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &quot;driver&quot;:   &quot;jwt&quot;,</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">++    &quot;provider&quot;: &quot;user&quot;,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">},</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">++ // Supported: &quot;orm&quot;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">++ &quot;providers&quot;: map[string]any{</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">++   &quot;user&quot;: map[string]any{</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">++     &quot;driver&quot;: &quot;orm&quot;,</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">++   },</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">++ },</span></span></code></pre></div><h3 id="_4-修改-session-go-配置文件" tabindex="-1">4. 修改 session.go 配置文件 <a class="header-anchor" href="#_4-修改-session-go-配置文件" aria-label="Permalink to “4. 修改 session.go 配置文件”">​</a></h3><div class="language-diff vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">diff</span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">// config/session.go</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;">-- &quot;driver&quot;: config.Env(&quot;SESSION_DRIVER&quot;, &quot;file&quot;),</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">++ &quot;default&quot;: config.Env(&quot;SESSION_DRIVER&quot;, &quot;file&quot;),</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">++ &quot;drivers&quot;: map[string]any{</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">++   &quot;file&quot;: map[string]any{</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">++     &quot;driver&quot;: &quot;file&quot;,</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">++   },</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">++ },</span></span></code></pre></div><h3 id="_5-修改-queue-go-配置文件" tabindex="-1">5. 修改 queue.go 配置文件 <a class="header-anchor" href="#_5-修改-queue-go-配置文件" aria-label="Permalink to “5. 修改 queue.go 配置文件”">​</a></h3><ul><li><p>如果正在使用 Queue 模块的 Redis 驱动，需相应修改：<a href="#优化-queue-配置">优化 Queue 配置</a>。</p></li><li><p>如果没有使用或想要以后使用 database 驱动，需要修改 <code>config/queue.go</code> 文件中的配置：</p></li></ul><div class="language-diff vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">diff</span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">// config/queue.go</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;">--</span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;"> // Drivers: &quot;sync&quot;, &quot;redis&quot;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">++ // Drivers: &quot;sync&quot;, &quot;database&quot;, &quot;custom&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&quot;connections&quot;: map[string]any{</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &quot;sync&quot;: map[string]any{</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &quot;driver&quot;: &quot;sync&quot;,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;">--  &quot;redis&quot;: map[string]any{</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;">--    &quot;driver&quot;:     &quot;redis&quot;,</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;">--    &quot;connection&quot;: &quot;default&quot;,</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;">--    &quot;queue&quot;:      config.Env(&quot;REDIS_QUEUE&quot;, &quot;default&quot;),</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;">--  },</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">++  &quot;database&quot;: map[string]any{</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">++    &quot;driver&quot;:     &quot;database&quot;,</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">++    &quot;connection&quot;: &quot;postgres&quot;,</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">++    &quot;queue&quot;:      &quot;default&quot;,</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">++    &quot;concurrent&quot;: 1,</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">++  },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">},</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">++ &quot;failed&quot;: map[string]any{</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">++  &quot;database&quot;: config.Env(&quot;DB_CONNECTION&quot;, &quot;postgres&quot;),</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">++  &quot;table&quot;:    &quot;failed_jobs&quot;,</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">++ },</span></span></code></pre></div><p>添加 database 驱动需要的迁移文件： <a href="https://github.com/goravel/goravel/blob/master/database/migrations/20210101000002_create_jobs_table.go" target="_blank" rel="noreferrer">database/migrations/20210101000002_create_jobs_table.go</a>，并在 <code>database/kernel.go</code> 文件中注册该迁移文件。</p><h3 id="_6-如果需要使用-http-client" tabindex="-1">6. 如果需要使用 HTTP Client <a class="header-anchor" href="#_6-如果需要使用-http-client" aria-label="Permalink to “6. 如果需要使用 HTTP Client”">​</a></h3><p><code>config/http.go</code> 文件中新增 HTTP Client 配置项:</p><div class="language-diff vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">diff</span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">// config/http.go</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">++ &quot;client&quot;: map[string]any{</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">++   &quot;base_url&quot;:                config.GetString(&quot;HTTP_CLIENT_BASE_URL&quot;),</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">++   &quot;timeout&quot;:                 config.GetDuration(&quot;HTTP_CLIENT_TIMEOUT&quot;),</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">++   &quot;max_idle_conns&quot;:          config.GetInt(&quot;HTTP_CLIENT_MAX_IDLE_CONNS&quot;),</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">++   &quot;max_idle_conns_per_host&quot;: config.GetInt(&quot;HTTP_CLIENT_MAX_IDLE_CONNS_PER_HOST&quot;),</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">++   &quot;max_conns_per_host&quot;:      config.GetInt(&quot;HTTP_CLIENT_MAX_CONN_PER_HOST&quot;),</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">++   &quot;idle_conn_timeout&quot;:       config.GetDuration(&quot;HTTP_CLIENT_IDLE_CONN_TIMEOUT&quot;),</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">++ },</span></span></code></pre></div><h3 id="_7-如果正在使用-goravel-redis-驱动" tabindex="-1">7. 如果正在使用 goravel/redis 驱动 <a class="header-anchor" href="#_7-如果正在使用-goravel-redis-驱动" aria-label="Permalink to “7. 如果正在使用 goravel/redis 驱动”">​</a></h3><p>需修改 <code>config/cache.go</code> 文件中的配置：</p><div class="language-diff vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">diff</span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">// config/cache.go</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&quot;redis&quot;: map[string]any{</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &quot;driver&quot;:     &quot;custom&quot;,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &quot;connection&quot;: &quot;default&quot;,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &quot;via&quot;: func() (cache.Driver, error) {</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;">--  return redisfacades.Redis(&quot;redis&quot;), nil</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">++  return redisfacades.Cache(&quot;redis&quot;)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">},</span></span></code></pre></div><h3 id="_8-如果正在使用-carbon-datetime-等方法" tabindex="-1">8. 如果正在使用 carbon.DateTime 等方法 <a class="header-anchor" href="#_8-如果正在使用-carbon-datetime-等方法" aria-label="Permalink to “8. 如果正在使用 carbon.DateTime 等方法”">​</a></h3><p>需相应修改：<a href="#优化-carbon-方法">优化 Carbon 方法</a></p><h3 id="_9-如果正在使用-session-自定义驱动" tabindex="-1">9. 如果正在使用 session 自定义驱动 <a class="header-anchor" href="#_9-如果正在使用-session-自定义驱动" aria-label="Permalink to “9. 如果正在使用 session 自定义驱动”">​</a></h3><p>需相应修改：<a href="#优化-session-自定义驱动方式">优化 Session 自定义驱动方式</a></p><h3 id="_10-如果正在使用-facades-config-中的方法" tabindex="-1">10. 如果正在使用 facades.Config() 中的方法 <a class="header-anchor" href="#_10-如果正在使用-facades-config-中的方法" aria-label="Permalink to “10. 如果正在使用 facades.Config() 中的方法”">​</a></h3><p>需相应修改：<a href="#优化-config-模块方法默认值类型">优化 Config 模块方法默认值类型</a></p><h3 id="_11-如果正在使用-sql-数据迁移" tabindex="-1">11. 如果正在使用 SQL 数据迁移 <a class="header-anchor" href="#_11-如果正在使用-sql-数据迁移" aria-label="Permalink to “11. 如果正在使用 SQL 数据迁移”">​</a></h3><p>需相应修改：<a href="#移除-sql-迁移">移除 SQL 迁移</a></p><h3 id="_12-如果正在使用-orm" tabindex="-1">12. 如果正在使用 Orm <a class="header-anchor" href="#_12-如果正在使用-orm" aria-label="Permalink to “12. 如果正在使用 Orm”">​</a></h3><p>需相应修改：<a href="#优化-orm-方法">优化 Orm 方法</a></p><h3 id="_13-如果正在使用-path-方法" tabindex="-1">13. 如果正在使用 Path 方法 <a class="header-anchor" href="#_13-如果正在使用-path-方法" aria-label="Permalink to “13. 如果正在使用 Path 方法”">​</a></h3><p>Path 方法由原来返回相对路径改为返回绝对路径，如果正在使用需检查是否需要修改：<a href="#优化-path-方法">优化 Path 方法</a></p><h3 id="_14-如果-正在使用-ctx-request-inputmap-方法" tabindex="-1">14. 如果 正在使用 <code>ctx.Request().InputMap</code> 方法 <a class="header-anchor" href="#_14-如果-正在使用-ctx-request-inputmap-方法" aria-label="Permalink to “14. 如果 正在使用 ctx.Request().InputMap 方法”">​</a></h3><p>需相应修改：<a href="#优化-request-方法">优化 Request 方法</a></p><h3 id="_15-如果正在使用-console-confirm-方法" tabindex="-1">15. 如果正在使用 <code>console.Confirm</code> 方法 <a class="header-anchor" href="#_15-如果正在使用-console-confirm-方法" aria-label="Permalink to “15. 如果正在使用 console.Confirm 方法”">​</a></h3><p>需相应修改：<a href="#优化-console-confirm-方法">优化 console Confirm 方法</a></p><h3 id="_16-如果正在使用-testing-request-方法" tabindex="-1">16. 如果正在使用 Testing.Request 方法 <a class="header-anchor" href="#_16-如果正在使用-testing-request-方法" aria-label="Permalink to “16. 如果正在使用 Testing.Request 方法”">​</a></h3><p>需相应修改：<a href="#优化-testing-request-方法">优化 Testing.Request 方法</a></p><h2 id="功能介绍" tabindex="-1">功能介绍 <a class="header-anchor" href="#功能介绍" aria-label="Permalink to “功能介绍”">​</a></h2><h3 id="新增-facades-db" tabindex="-1">新增 facades.DB() <a class="header-anchor" href="#新增-facades-db" aria-label="Permalink to “新增 facades.DB()”">​</a></h3><p>新增 <code>facades.DB()</code> 模块，方便进行数据库的原生操作，比 ORM 速度更快。</p><p><a href="./../database/getting-started.html">查看文档</a></p><h3 id="新增-facades-http" tabindex="-1">新增 facades.Http() <a class="header-anchor" href="#新增-facades-http" aria-label="Permalink to “新增 facades.Http()”">​</a></h3><p>新增一个内置的 HTTP 客户端 <code>facades.Http()</code>，让 API 调用变得轻而易举。</p><p><a href="./../digging-deeper/http-client.html">查看文档</a></p><h3 id="重构-facades-queue" tabindex="-1">重构 facades.Queue() <a class="header-anchor" href="#重构-facades-queue" aria-label="Permalink to “重构 facades.Queue()”">​</a></h3><ul><li><p>v1.15 之前 Queue 仅支持同步驱动与 Redis 驱动，从 v1.16 开始支持数据库驱动及自定义驱动。</p></li><li><p>新增 <code>jobs</code> 和 <code>failed_jobs</code> 表，用于存储任务及失败任务。</p></li><li><p>新增 <code>queue:retry</code> 命令，用于重试失败的任务。</p></li><li><p>新增 <code>queue:failed</code> 命令，用于查看失败任务。</p></li><li><p>支持在启动队列任务时设置重试次数。</p></li></ul><p>详情请 <a href="./../digging-deeper/queues.html">查看文档</a></p><h3 id="facades-auth-支持自定义驱动" tabindex="-1">facades.Auth() 支持自定义驱动 <a class="header-anchor" href="#facades-auth-支持自定义驱动" aria-label="Permalink to “facades.Auth() 支持自定义驱动”">​</a></h3><p>v1.15 之前 Auth 仅支持 JWT 驱动，从 v1.16 开始支持 Session 及自定义驱动，详情请 <a href="./../security/authentication.html#自定义驱动">查看文档</a>。</p><h3 id="make-命令生成的文件支持自动注册" tabindex="-1">make:* 命令生成的文件支持自动注册 <a class="header-anchor" href="#make-命令生成的文件支持自动注册" aria-label="Permalink to “make:* 命令生成的文件支持自动注册”">​</a></h3><p><code>make:migration</code>、 <code>make:seeder</code> 等命令生成的文件，在生成后会自动注册到框架中，无需像之前一样需要手动注册。</p><h3 id="goravel-installer-支持选择驱动" tabindex="-1">Goravel Installer 支持选择驱动 <a class="header-anchor" href="#goravel-installer-支持选择驱动" aria-label="Permalink to “Goravel Installer 支持选择驱动”">​</a></h3><p>使用 Goravel Installer 安装新项目的过程中可以选择安装不同的驱动，例如：可以选择安装 goravel/gin 或 goravel/fiber 等。</p><h3 id="拆分数据库驱动" tabindex="-1">拆分数据库驱动 <a class="header-anchor" href="#拆分数据库驱动" aria-label="Permalink to “拆分数据库驱动”">​</a></h3><p>之前多个数据库驱动同时集成在框架中，使得软件打包体积变大。 从 v1.16 开始，数据库驱动将作为独立包存在，只需安装自己需要的数据库驱动即可。</p><table tabindex="0"><thead><tr><th>数据库类型</th><th>驱动包</th></tr></thead><tbody><tr><td>Postgres</td><td><a href="https://github.com/goravel/postgres" target="_blank" rel="noreferrer">github.com/goravel/postgres</a></td></tr><tr><td>MySQL</td><td><a href="https://github.com/goravel/mysql" target="_blank" rel="noreferrer">github.com/goravel/mysql</a></td></tr><tr><td>Sqlserver</td><td><a href="https://github.com/goravel/sqlserver" target="_blank" rel="noreferrer">github.com/goravel/sqlserver</a></td></tr><tr><td>SQLite</td><td><a href="https://github.com/goravel/sqlite" target="_blank" rel="noreferrer">github.com/goravel/sqlite</a></td></tr></tbody></table><h3 id="orm-新增特性" tabindex="-1">Orm 新增特性 <a class="header-anchor" href="#orm-新增特性" aria-label="Permalink to “Orm 新增特性”">​</a></h3><ul><li><p>支持查找 JSON 字段，<a href="./../orm/getting-started.html#where-条件">查看文档</a>。</p></li><li><p>支持更新 JSON 字段，<a href="./../orm/getting-started.html#更新-json-字段">查看文档</a>。</p></li><li><p>Model 中支持设置 <code>GlobalScope</code> 方法，在查找、更新和删除操作时限制作用域：</p></li></ul><div class="language-go vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  contractsorm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">github.com/goravel/framework/contracts/database/orm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">github.com/goravel/framework/database/orm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> User</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> struct</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  orm</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Model</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  Name </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">string</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">func</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">r </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">User</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">GlobalScopes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() []</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">func</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">contractsorm</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Query</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">contractsorm</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Query</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> []</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">func</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">contractsorm</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Query</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">contractsorm</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Query</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    func</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">query</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> contractsorm</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Query</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">contractsorm</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Query</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">      return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> query.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;name&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;goravel&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="支持根据数据表创建-model" tabindex="-1">支持根据数据表创建 Model <a class="header-anchor" href="#支持根据数据表创建-model" aria-label="Permalink to “支持根据数据表创建 Model”">​</a></h3><p><code>make:model</code> 命令新增 <code>--table</code> 选项，用于根据数据表创建 Model：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">./artisan</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> make:model</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --table=users</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> User</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">//</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 如果</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Model</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 已存在可以使用</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 选项强制覆盖</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">./artisan</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> make:model</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --table=users</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> User</span></span></code></pre></div><h3 id="支持运行时动态获取-sql-语句" tabindex="-1">支持运行时动态获取 SQL 语句 <a class="header-anchor" href="#支持运行时动态获取-sql-语句" aria-label="Permalink to “支持运行时动态获取 SQL 语句”">​</a></h3><p>新增 <code>EnableQueryLog</code> 等方法，用于在运行时动态获取 SQL 语句：</p><div class="language-go vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ctx </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> db.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">EnableQueryLog</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ctx)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">facades.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Orm</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">WithContext</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ctx).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Query</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Find</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">queryLogs </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> db.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">GetQueryLog</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ctx)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ctx </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> db.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">DisableQueryLog</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ctx)</span></span></code></pre></div><h3 id="migration-新增特性" tabindex="-1">Migration 新增特性 <a class="header-anchor" href="#migration-新增特性" aria-label="Permalink to “Migration 新增特性”">​</a></h3><ul><li>新增 <code>Change</code> 方法（适用于 Postgres, MySQL, Sqlserver），用于修改表结构：</li></ul><div class="language-go vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">table.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">String</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;name&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Change</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre></div><ul><li>新增 <code>RenameColumn</code> 方法，用于重命名表列：</li></ul><div class="language-go vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">table.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">RenameColumn</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;old_name&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;new_name&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><ul><li>新增 <code>Comment</code> 方法，用于为表添加注释（适用于 Postgres, MySQL）：</li></ul><div class="language-go vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">table.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Comment</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;user table&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><ul><li>新增 <code>First</code> 方法，用于将字段设置为表的第一个字段（适用于 MySQL）：</li></ul><div class="language-go vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">table.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">String</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;name&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">First</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre></div><ul><li>新增 <code>After</code> 方法，用于将字段设置为表的最后一个字段（适用于 MySQL）：</li></ul><div class="language-go vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">table.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">String</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;name&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">After</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;id&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><ul><li>新增 <code>Morphs</code>, <code>NullableMorphs</code>, <code>NumericMorphs</code>, <code>UuidMorphs</code>, <code>UlidMorphs</code> 方法，用于创建多态关联字段：</li></ul><div class="language-go vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">table.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Morphs</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;morphable&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// morphable_type, morphable_id</span></span></code></pre></div><ul><li>新增 <code>Uuid</code>, <code>Ulid</code> 方法，用于创建 UUID 和 ULID 字段：</li></ul><div class="language-go vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">table.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Uuid</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;uuid&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">table.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Ulid</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;ulid&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><ul><li>新增 <code>GeneratedAs</code> 和 <code>Always</code> 方法，用于创建生成列（仅 PostgreSQL）：</li></ul><div class="language-go vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">table.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">String</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;name&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">GeneratedAs</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Always</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre></div><h3 id="grpc-新增-shutdown-方法" tabindex="-1">Grpc 新增 Shutdown 方法 <a class="header-anchor" href="#grpc-新增-shutdown-方法" aria-label="Permalink to “Grpc 新增 Shutdown 方法”">​</a></h3><p>新增 <code>Shutdown</code> 方法以便优雅的关闭 Grpc，<a href="./../the-basics/grpc.html#关闭grpc">查看文档</a>。</p><h3 id="artisan-新增禁用打印颜色选项" tabindex="-1">Artisan 新增禁用打印颜色选项 <a class="header-anchor" href="#artisan-新增禁用打印颜色选项" aria-label="Permalink to “Artisan 新增禁用打印颜色选项”">​</a></h3><p>有些命令默认会打印颜色，例如 <code>list</code> 命令。 但在某些终端或日志中颜色值会是乱码。 这时你可以使用 <code>--no-ansi</code> 选项禁用打印颜色：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">go</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> artisan</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> list</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --no-ansi</span></span></code></pre></div><h3 id="加解密-env-文件" tabindex="-1">加解密 env 文件 <a class="header-anchor" href="#加解密-env-文件" aria-label="Permalink to “加解密 env 文件”">​</a></h3><p>你也许想将生产环境的 env 文件添加到版本控制中，但又不想将敏感信息暴露出来，这时你可以加解密 env 文件。</p><p><a href="./../getting-started/installation.html#加解密-env-文件">查看文档</a></p><h3 id="发送邮件支持设置-header" tabindex="-1">发送邮件支持设置 Header <a class="header-anchor" href="#发送邮件支持设置-header" aria-label="Permalink to “发送邮件支持设置 Header”">​</a></h3><p>新增 <code>Headers</code> 方法，用于设置邮件的 Header。</p><div class="language-go vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">facades.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Mail</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Headers</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">map</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;X-Mailer&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Goravel&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><h3 id="installer-支持自升级" tabindex="-1">Installer 支持自升级 <a class="header-anchor" href="#installer-支持自升级" aria-label="Permalink to “Installer 支持自升级”">​</a></h3><p>goravel/installer 新增 <code>upgrade</code> 命令，用于 installer 的自身升级：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">goravel</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> upgrade</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">goravel</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> upgrade</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> v1.1.1</span></span></code></pre></div><h3 id="多语言文件支持-embed-加载" tabindex="-1">多语言文件支持 embed 加载 <a class="header-anchor" href="#多语言文件支持-embed-加载" aria-label="Permalink to “多语言文件支持 embed 加载”">​</a></h3><p>使用 embed 加载时，多语言文件将会被编译到二进制文件中，部署时不再需要多语言文件。</p><p><a href="./../digging-deeper/localization.html#embed-加载">查看文档</a></p><h3 id="schedule-新增特性" tabindex="-1">Schedule 新增特性 <a class="header-anchor" href="#schedule-新增特性" aria-label="Permalink to “Schedule 新增特性”">​</a></h3><ul><li><p>新增 <code>EverySecond</code> 等方法，详细请 <a href="./../digging-deeper/task-scheduling.html#调度频率选项">查看文档</a>。</p></li><li><p>新增 <code>schedule:run</code> 命令，用于手动运行任务。</p></li><li><p>新增 <code>schedule:list</code> 方法，用于查看所有任务。</p></li></ul><h3 id="request-新增特性" tabindex="-1">Request 新增特性 <a class="header-anchor" href="#request-新增特性" aria-label="Permalink to “Request 新增特性”">​</a></h3><ul><li>v1.15 之前下面 <code>Request</code> 绑定将报错，从 v1.16 开始支持绑定多个文件：</li></ul><div class="language-go vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> StoreMediaRequest</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> struct</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	Files []</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">multipart</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">FileHeader</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> \`form:&quot;files&quot; json:&quot;files&quot;\`</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><ul><li>新增 <code>OriginalPath</code> 方法，用于获取原始路由路径：</li></ul><div class="language-go vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ctx.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Request</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">OriginPath</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre></div><ul><li><code>Request</code> 新增 <code>Info</code> 方法，用于获取当前请求路由信息：</li></ul><div class="language-go vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">info </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ctx.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Request</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Info</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre></div><ul><li><code>Request</code> 新增 <code>Name</code> 方法，用于获取当前请求路由名称：</li></ul><div class="language-go vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">name </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ctx.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Request</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre></div><ul><li>当设置 <code>http.request_timeout</code> 配置项 为 <code>0</code> 时，请求将不会超时。</li></ul><h3 id="route-新增特性" tabindex="-1">Route 新增特性 <a class="header-anchor" href="#route-新增特性" aria-label="Permalink to “Route 新增特性”">​</a></h3><ul><li>新增 <code>GetRoutes</code> 方法，用于获取所有路由：</li></ul><div class="language-go vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">routes </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> facades.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Route</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">GetRoutes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre></div><ul><li>新增 <code>Name</code> 方法，用于设置路由名称：</li></ul><div class="language-go vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">facades.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Route</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Get</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;users&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, usersController.Index).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;users.index&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>然后可以使用 <code>Info</code> 方法获取路由信息：</p><div class="language-go vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">route </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> facades.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Route</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Info</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;users.index&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><ul><li>新增 <code>route:list</code> 命令，用于查看所有路由：</li></ul><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">./artisan</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> route:list</span></span></code></pre></div><h3 id="testing-支持创建-cache-镜像" tabindex="-1">Testing 支持创建 Cache 镜像 <a class="header-anchor" href="#testing-支持创建-cache-镜像" aria-label="Permalink to “Testing 支持创建 Cache 镜像”">​</a></h3><p>新增 <code>Cache</code> 方法，用于创建 Cache 镜像：</p><div class="language-go vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">cache, err </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> facades.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Testing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Docker</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Cache</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre></div><h3 id="不同-jwt-guard-支持设置不同的-ttl-与-secert" tabindex="-1">不同 JWT Guard 支持设置不同的 ttl 与 secert <a class="header-anchor" href="#不同-jwt-guard-支持设置不同的-ttl-与-secert" aria-label="Permalink to “不同 JWT Guard 支持设置不同的 ttl 与 secert”">​</a></h3><p>之前 JWT Guard 的 <code>ttl</code> 与 <code>secret</code> 配置项是全局配置，从 v1.16 开始，你可以为不同的 JWT Guard 设置不同的 <code>ttl</code> 与 <code>secret</code>，<a href="./../security/authentication.html#不同-jwt-guard-支持不同配置">查看文档</a>。</p><h3 id="注册-serviceprovider-不再依赖顺序" tabindex="-1">注册 ServiceProvider 不再依赖顺序 <a class="header-anchor" href="#注册-serviceprovider-不再依赖顺序" aria-label="Permalink to “注册 ServiceProvider 不再依赖顺序”">​</a></h3><p>ServiceProvider 新增可选方法 <code>Relationship() binding.Relationship</code>，用来声明当前 ServicerProvider 的依赖关系，设置了该方法的 ServiceProvider 将不依赖注册顺序，未设置的 ServiceProvider 将被最后注册，例如：</p><div class="language-go vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ServiceProvider</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> struct</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">func</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">r </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ServiceProvider</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Relationship</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">binding</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Relationship</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">	return</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> binding</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Relationship</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">		Bindings: []</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">			BindingSession,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">		},</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">		Dependencies: []</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">			binding.Config,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">		},</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">		ProvideFor: []</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">			binding.Cache,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">		},</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">func</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">r </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ServiceProvider</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Register</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">app</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> foundation</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Application</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">func</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">r </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ServiceProvider</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Boot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">app</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> foundation</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Application</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {}</span></span></code></pre></div><h3 id="移除-sql-迁移" tabindex="-1">移除 SQL 迁移 <a class="header-anchor" href="#移除-sql-迁移" aria-label="Permalink to “移除 SQL 迁移”">​</a></h3><p>SQL 迁移被完全移除，请使用 Go 语言迁移。 迁移步骤：</p><ol><li>移除 <code>config/database.go</code> 中的 <code>migrations.driver</code> 键；</li></ol><div class="language-go vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// config/database.go</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;migrations&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">map</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">any</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">--</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   &quot;driver&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;sql&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &quot;table&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:  </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;migrations&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">},</span></span></code></pre></div><ol start="2"><li>将 <code>database/migrations</code> 目录下的 SQL 迁移文件转换为 Go 语言迁移文件：</li></ol><div class="language-go vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Up Run the migrations.</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">func</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">r </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">M20241207095921CreateUsersTable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Up</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">error</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> facades.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Schema</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Sql</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({Original SQL})</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Down Reverse the migrations.</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">func</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">r </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">M20241207095921CreateUsersTable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Down</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">error</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> facades.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Schema</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Sql</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({Original SQL})</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><ol start="3"><li>在 <code>database/kernel.go</code> 文件中注册迁移文件；</li></ol><h3 id="优化-config-模块方法默认值类型" tabindex="-1">优化 Config 模块方法默认值类型 <a class="header-anchor" href="#优化-config-模块方法默认值类型" aria-label="Permalink to “优化 Config 模块方法默认值类型”">​</a></h3><p>之前 <code>GetString</code>、<code>GetInt</code>、<code>GetBool</code> 方法的默认值类型为 <code>any</code>，从 v1.16 开始，默认值类型为 <code>string</code>、<code>int</code>、<code>bool</code>，以保证类型安全。</p><div class="language-diff vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">diff</span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0"><code><span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;">-- GetString(path string, defaultValue ...any) string</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">++ GetString(path string, defaultValue ...string) string</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;">-- GetInt(path string, defaultValue ...any) int</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">++ GetInt(path string, defaultValue ...int) int</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;">-- GetBool(path string, defaultValue ...any) bool</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">++ GetBool(path string, defaultValue ...bool) bool</span></span></code></pre></div><h3 id="优化-orm-方法" tabindex="-1">优化 Orm 方法 <a class="header-anchor" href="#优化-orm-方法" aria-label="Permalink to “优化 Orm 方法”">​</a></h3><ul><li>优化 <code>Count</code>, <code>Distinct</code>, <code>Select</code>, <code>Exists</code>, <code>Sum</code> 方法：</li></ul><div class="language-diff vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">diff</span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0"><code><span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;">-- Count(count *int64) error</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">++ Count() (int64, error)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;">-- Distinct(args ...any) Query</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">++ Distinct(columns ...string) Query</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;">-- Exists(exists *bool) error</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">++ Exists() (bool, error)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;">-- Select(query any, args ...any) Query</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">++ Select(columns ...string) Query</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;">-- Sum(column string, dest any) error</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">++ Sum(column string) (int64, error)</span></span></code></pre></div><ul><li><code>Where</code> 方法支持闭包：</li></ul><div class="language-go vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">facades.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Orm</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Query</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">func</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">query</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> orm</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Query</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">orm</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Query</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> query.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;height&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">180</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;age&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">18</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">FindOrFail</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">user, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// SELECT * FROM users WHERE id = 100 AND (height = 180 AND age = 18);</span></span></code></pre></div><h3 id="优化-path-方法" tabindex="-1">优化 Path 方法 <a class="header-anchor" href="#优化-path-方法" aria-label="Permalink to “优化 Path 方法”">​</a></h3><ul><li>新增 <code>Resource</code> 方法</li></ul><div class="language-go vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">path.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Resource</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;views/welcome.tmpl&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><ul><li>path 方法返回绝对路径</li></ul><p>之前 path 方法返回的是相对于根目录的路径，例如 <code>path.Config(&quot;app.go&quot;) == config/app.go</code>。 从 v1.16 开始，path 方法返回的是绝对路径，例如 <code>path.Config(&quot;app.go&quot;) == /Users/goravel/workspace/goravel/config/app.go</code>。</p><h3 id="优化-request-方法" tabindex="-1">优化 Request 方法 <a class="header-anchor" href="#优化-request-方法" aria-label="Permalink to “优化 Request 方法”">​</a></h3><ol><li>修改 <code>InputMap</code> 方法默认值类型：</li></ol><div class="language-diff vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">diff</span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0"><code><span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;">-- ctx.Request().InputMap(key string, defaultValue ...map[string]string) map[string]string</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">++ ctx.Request().InputMap(key string, defaultValue ...map[string]any) map[string]any</span></span></code></pre></div><ol start="2"><li>新增 <code>InputMapArray</code> 方法，用于获取数组类型的 Map：</li></ol><div class="language-go vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ctx.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Request</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">InputMapArray</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(key </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, defaultValue </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[]</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">map</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">any</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) []</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">map</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">any</span></span></code></pre></div><ol start="3"><li>新增 <code>Files</code> 方法，用于获取多个文件：</li></ol><div class="language-go vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ctx.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Request</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Files</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(name </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) ([]filesystem.File, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">error</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h3 id="优化-console-confirm-方法" tabindex="-1">优化 console Confirm 方法 <a class="header-anchor" href="#优化-console-confirm-方法" aria-label="Permalink to “优化 console Confirm 方法”">​</a></h3><p>修改 <code>Confirm</code> 方法的返回值，简化判断逻辑：</p><div class="language-diff vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">diff</span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0"><code><span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;">-- Confirm(question string, option ...ConfirmOption) (bool, error)</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">++ Confirm(question string, option ...ConfirmOption) bool</span></span></code></pre></div><h3 id="优化-session-自定义驱动方式" tabindex="-1">优化 Session 自定义驱动方式 <a class="header-anchor" href="#优化-session-自定义驱动方式" aria-label="Permalink to “优化 Session 自定义驱动方式”">​</a></h3><p>之前，你需要通过 <code>facades.Session().Extend</code> 方法注册驱动。 从 v1.16 开始，你只需要将其添加到 <code>config/session.go</code> 配置文件中即可：</p><div class="language-diff vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">diff</span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">// app/providers/app_service_provider.go</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;">-- facades.Session().Extend(&quot;custom&quot;, func() session.Driver {</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;">--   return &amp;CustomDriver{}</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;">-- })</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">// config/session.go</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&quot;drivers&quot;: map[string]any{</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &quot;custom&quot;: map[string]any{</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &quot;driver&quot;: &quot;custom&quot;,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &quot;via&quot;: func() (session.Driver, error) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      return &amp;CustomDriver{}, nil</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">},</span></span></code></pre></div><p><a href="./../the-basics/session.html#添加自定义会话驱动">查看文档</a></p><h3 id="优化-testing-request-方法" tabindex="-1">优化 Testing.Request 方法 <a class="header-anchor" href="#优化-testing-request-方法" aria-label="Permalink to “优化 Testing.Request 方法”">​</a></h3><p>优化 <code>WithCookies</code> 和 <code>WithCookie</code> 方法的入参：</p><div class="language-diff vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">diff</span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0"><code><span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;">-- WithCookies(cookies map[string]string) Request</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">++ WithCookies(cookies []*http.Cookie) Request</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;">-- WithCookie(key, value string) Request</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">++ WithCookie(cookie *http.Cookie) Request</span></span></code></pre></div><h3 id="优化-carbon-方法" tabindex="-1">优化 Carbon 方法 <a class="header-anchor" href="#优化-carbon-方法" aria-label="Permalink to “优化 Carbon 方法”">​</a></h3><p><code>carbon.NewDateTime</code> 等方法原来返回的是 struct 实例，v1.16 开始返回指针，如果你定义了 <code>carbon.DateTime</code> 等类型，需要修改为 <code>*carbon.DateTime</code> 等指针类型。</p><h3 id="优化-str-snake-方法" tabindex="-1">优化 str.Snake 方法 <a class="header-anchor" href="#优化-str-snake-方法" aria-label="Permalink to “优化 str.Snake 方法”">​</a></h3><p><code>str.Snake</code> 方法之前会将 <code>userID</code> 转换为 <code>user_i_d</code>，从 v1.16 开始，会转换为 <code>user_id</code>。</p><h3 id="goravel-cloudinary-停止维护" tabindex="-1">goravel/cloudinary 停止维护 <a class="header-anchor" href="#goravel-cloudinary-停止维护" aria-label="Permalink to “goravel/cloudinary 停止维护”">​</a></h3><p><a href="https://github.com/goravel/cloudinary" target="_blank" rel="noreferrer">goravel/cloudinary</a> 停止维护，请使用 <a href="https://github.com/goravel/s3" target="_blank" rel="noreferrer">goravel/s3</a> 等其他驱动替代。</p><h3 id="优化-queue-配置" tabindex="-1">优化 Queue 配置 <a class="header-anchor" href="#优化-queue-配置" aria-label="Permalink to “优化 Queue 配置”">​</a></h3><p>v1.15 之前，Queue 模块的 Redis 驱动使用 <a href="https://github.com/RichardKnop/machinery" target="_blank" rel="noreferrer">RichardKnop/machinery</a> 实现。 从 v1.16 开始，Redis 驱动在 <a href="https://github.com/goravel/redis" target="_blank" rel="noreferrer">goravel/redis</a> 中提供官方支持。</p><p>你依然可以在 v1.16 中使用 Machinery 驱动，但其将在 v1.17 中被移除，建议使用 Redis 驱动。 下面提供两种升级方式：</p><h4 id="继续使用-machinery-驱动" tabindex="-1">继续使用 Machinery 驱动 <a class="header-anchor" href="#继续使用-machinery-驱动" aria-label="Permalink to “继续使用 Machinery 驱动”">​</a></h4><p>修改 <code>config/queue.go</code> 文件中的配置：</p><div class="language-diff vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">diff</span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">// config/queue.go</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&quot;connections&quot;: map[string]any{</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &quot;redis&quot;: map[string]any{</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;">--    &quot;driver&quot;:     &quot;redis&quot;,</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">++    &quot;driver&quot;:     &quot;machinery&quot;,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &quot;connection&quot;: &quot;default&quot;,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &quot;queue&quot;:      config.Env(&quot;REDIS_QUEUE&quot;, &quot;default&quot;),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">},</span></span></code></pre></div><h4 id="使用-redis-队列驱动" tabindex="-1">使用 Redis 队列驱动 <a class="header-anchor" href="#使用-redis-队列驱动" aria-label="Permalink to “使用 Redis 队列驱动”">​</a></h4><p>修改 <code>config/queue.go</code> 文件中的配置：</p><div class="language-diff vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">diff</span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">// config/queue.go</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">import (</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &quot;github.com/goravel/framework/contracts/queue&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  redisfacades &quot;github.com/goravel/redis/facades&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&quot;connections&quot;: map[string]any{</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &quot;redis&quot;: map[string]any{</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;">--  &quot;driver&quot;:     &quot;redis&quot;,</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">++  &quot;driver&quot;:     &quot;custom&quot;,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &quot;connection&quot;: &quot;default&quot;,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &quot;queue&quot;:      config.Env(&quot;REDIS_QUEUE&quot;, &quot;default&quot;),</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">++  &quot;via&quot;: func() (queue.Driver, error) {</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">++    return redisfacades.Queue(&quot;redis&quot;) // The \` + &quot;\`redis\`&quot; + \` value is the key of \` + &quot;\`connections\`&quot; + \`</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">++  },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">},</span></span></code></pre></div><p>新的 Redis 队列驱动与原 machinery 队列驱动的任务都保存在同一个 Redis 中，但使用不同的队列名称。 即使你切换为新的 Redis 队列驱动，框架会继续读取原 Machinery 队列驱动的任务，直到 Machinery 中所有任务执行完毕。 与此同时，新的队列任务不再写入 Machinery 队列中，而是写入新的 Redis 队列，并被新的 Redis 队列驱动消费。 以实现两个驱动间的无缝切换。</p><p>你可以到 Redis 中查看两个驱动的数据是否被正确写入与消费：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">redis-cli</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 获取 Redis 中所有的键</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">keys</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 查看 Machinery 队列驱动数据（替换 {} 中的值）</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">LRANGE</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> {app_name}_queues:{queue_name}</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -1</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 查看 Redis 队列驱动数据（替换 {} 中的值）</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">LRANGE</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> {app_name}_queues:{connection}_{queue}</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -1</span></span></code></pre></div><h3 id="修复发送邮件时-bcc-和-cc-设置无效的问题" tabindex="-1">修复发送邮件时 bcc 和 cc 设置无效的问题 <a class="header-anchor" href="#修复发送邮件时-bcc-和-cc-设置无效的问题" aria-label="Permalink to “修复发送邮件时 bcc 和 cc 设置无效的问题”">​</a></h3><p>goravel/framework: v1.16.1</p><p>Issue: <a href="https://github.com/goravel/goravel/issues/737" target="_blank" rel="noreferrer">#737</a></p><h3 id="修复使用队列发送邮件时返回的-error-错误的问题" tabindex="-1">修复使用队列发送邮件时返回的 error 错误的问题 <a class="header-anchor" href="#修复使用队列发送邮件时返回的-error-错误的问题" aria-label="Permalink to “修复使用队列发送邮件时返回的 error 错误的问题”">​</a></h3><p>goravel/framework: v1.16.1</p><p>PR: <a href="https://github.com/goravel/framework/pull/1148" target="_blank" rel="noreferrer">#1148</a></p><h3 id="修复使用-orm-create-方法创建多条记录时会触发-create-事件的问题" tabindex="-1">修复使用 Orm Create 方法创建多条记录时会触发 create 事件的问题 <a class="header-anchor" href="#修复使用-orm-create-方法创建多条记录时会触发-create-事件的问题" aria-label="Permalink to “修复使用 Orm Create 方法创建多条记录时会触发 create 事件的问题”">​</a></h3><p>goravel/framework: v1.16.1</p><p>Issue: <a href="https://github.com/goravel/goravel/issues/738" target="_blank" rel="noreferrer">#738</a></p><h3 id="修复-make-package-命令创建的代码错误的问题" tabindex="-1">修复 make:package 命令创建的代码错误的问题 <a class="header-anchor" href="#修复-make-package-命令创建的代码错误的问题" aria-label="Permalink to “修复 make:package 命令创建的代码错误的问题”">​</a></h3><p>goravel/framework: v1.16.1</p><p>Issue: <a href="https://github.com/goravel/goravel/issues/743" target="_blank" rel="noreferrer">#743</a></p><h3 id="修复发布包文件时路径错误的问题" tabindex="-1">修复发布包文件时路径错误的问题 <a class="header-anchor" href="#修复发布包文件时路径错误的问题" aria-label="Permalink to “修复发布包文件时路径错误的问题”">​</a></h3><p>goravel/framework: v1.16.1</p><p>Issue: <a href="https://github.com/goravel/goravel/issues/749" target="_blank" rel="noreferrer">#749</a></p><h3 id="修复事务中-panic-不会回滚的问题" tabindex="-1">修复事务中 panic 不会回滚的问题 <a class="header-anchor" href="#修复事务中-panic-不会回滚的问题" aria-label="Permalink to “修复事务中 panic 不会回滚的问题”">​</a></h3><p>goravel/framework: v1.16.3</p><p>Issue: <a href="https://github.com/goravel/goravel/issues/762" target="_blank" rel="noreferrer">#762</a></p><h3 id="修复在独立的迁移脚本中添加或删除列时应用报错的问题" tabindex="-1">修复在独立的迁移脚本中添加或删除列时应用报错的问题 <a class="header-anchor" href="#修复在独立的迁移脚本中添加或删除列时应用报错的问题" aria-label="Permalink to “修复在独立的迁移脚本中添加或删除列时应用报错的问题”">​</a></h3><p>goravel/framework: v1.16.3</p><p>goravel/postgres: v1.4.1</p><p>如果在独立的迁移脚本中添加或删除列，但没有重启应用，将会有下面两个错误：</p><ol><li>DB facade 将会 panic；</li><li>Postgres 驱动将会返回错误：<code>cached plan must not change result type</code>；</li></ol><p>Issue: <a href="https://github.com/goravel/goravel/issues/768" target="_blank" rel="noreferrer">#768</a></p><h3 id="修复-orm-select-方法的破坏性升级" tabindex="-1">修复 Orm Select 方法的破坏性升级 <a class="header-anchor" href="#修复-orm-select-方法的破坏性升级" aria-label="Permalink to “修复 Orm Select 方法的破坏性升级”">​</a></h3><p>goravel/framework: v1.16.3</p><p>从 v1.15 升级到 v1.16， Orm Select 方法有一个破坏性变化。 <code>Select</code> 不再支持 <code>db.Raw()</code>，因此添加新的 <code>SelectRaw</code> 方法以便保持之前的代码逻辑。</p><p>Issue: <a href="https://github.com/goravel/goravel/issues/770" target="_blank" rel="noreferrer">#770</a></p>`,231)]))}const c=i(t,[["render",l]]);export{g as __pageData,c as default};
